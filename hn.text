curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io-2023.key | sudo tee /usr/share/keyrings/jenkins-keyring.asc > /dev/null
echo deb [signed-by=/usr/share/keyrings/jenkins-keyring.asc] https://pkg.jenkins.io/debian-stable binary/ | sudo tee /etc/apt/sources.list.d/jenkins.list > /dev/null

pipeline {
agent any
stages {
stage('Checkout') {
steps {
// Check out code from Git repository
git url: 'https://github.com/yourusername/your-maven- project.git', branch:
'main'
44
}
}
stage('Build') {
steps {
// Run Maven bbuild
sh 'mvn clean package'
}
}
stage('Test') {
steps {
// Optionally, separate test execution if needed sh 'mvn test'
}
}
}
post {
always {
// Archive test reports
junit '**/target/surefire-reports/*.xml'
}
success {
echo 'Build and tests succeeded!'
}
failure {
echo 'Build or tests failed.'
}
}
}








pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                git 'https://github.com/spring-projects/spring-petclinic.git'
            }
        }
        stage('Build') {
            steps {
                sh './mvnw clean install'
            }
        }
        stage('Test Reports') {
            steps {
                junit '**/target/surefire-reports/*.xml'
            }
        }
        stage('Archive Artifact') {
            steps {
                archiveArtifacts artifacts: 'target/*.jar', fingerprint: true
            }
        }
    }
}







pom.xml


<build>
  <plugins>
    <plugin>
      <groupId>org.apache.maven.plugins</groupId>
      <artifactId>maven-compiler-plugin</artifactId>
      <version>3.8.1</version>
      <configuration>
        <source>1.8</source>
        <target>1.8</target>
      </configuration>
    </plugin>
  </plugins>
</build>



<project 
xmlns="http://maven.apache.org/POM/4.0.0" 
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
http://maven.apache.org/xsd/maven-4.0.0.xsd"> 
<modelVersion>4.0.0</modelVersion> 
<!-- Project Coordinates --> 
<groupId>com.example</groupId> 
<artifactId>MyMavenApp</artifactId> 
<version>1.0-SNAPSHOT</version> 
<!-- Properties: Customize Java version or plugin versions --> 
<properties> 
<maven.compiler.source>11</maven.compiler.source> 
<maven.compiler.target>11</maven.compiler.target> 
</properties> 
<!-- Dependencies --> 
<dependencies> 
<!-- Example: JUnit dependency for testing --> 
<dependency> 
<groupId>junit</groupId> 
<artifactId>junit</artifactId> 
<version>4.13.2</version> 
<scope>test</scope> 
</dependency> 
</dependencies> 
<!-- Build: Configuring plugins and build settings --> 
<build> 
<plugins> 
<!-- Example: Maven Compiler Plugin to compile Java code --> 
<plugin> 
<groupId>org.apache.maven.plugins</groupId> 
<artifactId>maven-compiler-plugin</artifactId> 
<version>3.8.1</version> 
13 
<configuration> 
<source>1.6</source> 
<target>1.6</target> 
</configuration> 
</plugin> 
<!-- Example: Maven Surefire Plugin to run tests --> 
<plugin> 
<groupId>org.apache.maven.plugins</groupId> 
<artifactId>maven-surefire-plugin</artifactId> 
<version>2.22.2</version> 
</plugin> 
</plugins> 
</build> 
</project>



https://devopslab.notion.site/



---
- name:Install and start NGINX on localhost
  hosts:localhost
  become:yourusername
  tasks:
    -name: Install NGINX
     apt:
       name:nginx 
       state:present
       update_cache:yes 
    - name: Ensuring NGINX is running
      service:
          name:nginx
          state:started
          enabled:yes


**/target/surefire-reports/*.xml